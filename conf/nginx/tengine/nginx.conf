user www-data www-data;
worker_processes auto;

error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 65535;
events {
    # The effective method, used on Linux 2.6+, optmized to serve many clients with each thread.
    use epoll;
    # Determines how many clients will be served by each worker process.
    worker_connections 20480;
    # Accept as many connections as possible, after nginx gets notification about a new connection.
    multi_accept on;
}

http {
    log_format  main_ext  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$host" sn="$server_name" '
                    'rt=$request_time '
                    'ua="$upstream_addr" us="$upstream_status" '
                    'ut="$upstream_response_time" ul="$upstream_response_length" '
                    'cs=$upstream_cache_status' ;

    include mime.types;
    default_type application/octet-stream;
    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 1024m;
    client_body_buffer_size 10m;
    sendfile on;
    tcp_nopush on;
    keepalive_timeout 120;
    server_tokens off;
    tcp_nodelay on;

    # 隐藏www服务信息
    more_clear_headers 'Server';

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;
    fastcgi_intercept_errors on;

    #Gzip Compression
    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_min_length 1k;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
      text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
      text/javascript application/javascript application/x-javascript
      text/x-json application/json application/x-web-app-manifest+json
      text/css text/plain text/x-component
      font/opentype application/x-font-ttf application/vnd.ms-fontobject
      image/jpeg image/gif image/png image/x-icon;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

    ##If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    server_info off;
    server_tag off;

    # redirect server error pages to the static page
    error_page 404             /404.html;
    error_page 500 502 503 504 /50x.html;

    server {
        listen 80 default_server;
        #listen [::]:80 default_server ipv6only=on;
        server_name _;
        # return 500;
    }

    # server {
    #       listen 443 default_server;
    #       server_name _;
    #       ssl_certificate /etc/nginx/conf.d/certs/_wildcard.default.com.pem;
    #       ssl_certificate_key /etc/nginx/conf.d/certs/_wildcard.default.com-key.pem;
    #     #  return 500;
    # }
#   server {
#     listen 80;
#     listen 443 ssl http2;
#     server_name _;
#     # access_log /data/wwwlogs/access_nginx.log combined;
#     root /var/www/html/default;
#     index index.html index.htm index.php;

#     ssl_certificate /etc/nginx/conf.d/certs/_wildcard.default.com.pem;
#     ssl_certificate_key /etc/nginx/conf.d/certs/_wildcard.default.com-key.pem;
#     #error_page 404 /404.html;
#     #error_page 502 /502.html;
#     # location /nginx_status {
#     #   stub_status on;
#     #   access_log off;
#     #   allow 127.0.0.1;
#     #   deny all;
#     # }

#     location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {
#       expires 30d;
#       access_log off;
#     }
#     location ~ .*\.(js|css)?$ {
#       expires 7d;
#       access_log off;
#     }
#     location ~ ^/(\.user.ini|\.ht|\.git|\.svn|\.project|LICENSE|README.md) {
#       deny all;
#     }
#   }
    charset UTF-8;
    include /etc/nginx/conf.d/*.conf;
}