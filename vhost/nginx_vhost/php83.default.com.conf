upstream web_php83 {
#   ip_hash;
  server php83_apache:88;
}

server {
    listen 80;
    # nginx在1.25.1版本中弃用了listen指令的http2参数，单独加入了http2指令
    # listen 443 ssl http2;
    listen       443 ssl;
    listen       [::]:443 ssl;
    server_name php83.default.com;
    root /var/www/html/default;
    index  index.php index.html index.htm;
    charset utf-8;

    access_log /dev/null;
  #  error_log  /var/log/nginx/php83.default.com_error_nginx.log  warn;

    #error_page  404              /404.html;

    ssl_certificate /etc/nginx/conf.d/certs/rootCA.pem;
    ssl_certificate_key /etc/nginx/conf.d/certs/rootCA-key.pem;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";
    add_header Strict-Transport-Security max-age=31536000;

    # 开启nginx对根目录的访问(解决输入http://localhost,返回403 的问题)
    autoindex on;
    # 默认为on，显示出文件的确切大小，单位是bytes。
    autoindex_exact_size off;
    # 改为off后，显示出文件的大概大小，单位是kB或者MB或者GB
    autoindex_localtime on;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location / {
        # add_header Cache-Control no-cache;
        # add_header Pragma no-cache;
        # add_header Expires 0;
        index  index.html index.htm index.php;
        if (!-e $request_filename){
            rewrite ^/(.*) /index.php last;
        }
        try_files $uri @apache;
    }
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    location @apache {
        proxy_pass http://web_php83;
        # proxy_pass http://php83_apache:88;

        proxy_connect_timeout 300s;
        proxy_send_timeout 900;
        proxy_read_timeout 900;
        proxy_buffer_size 64k;
        proxy_buffers 4 128k;
        proxy_busy_buffers_size 128k;
        proxy_redirect off;
        proxy_hide_header Vary;
        proxy_set_header Host $host;
        proxy_set_header Accept-Encoding '';
        proxy_set_header Referer $http_referer;
        proxy_set_header Cookie $http_cookie;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location ~ .*\.(php|php5|cgi|pl)?$ {
        proxy_pass http://web_php83;
        # proxy_pass http://php83_apache:88;

        proxy_connect_timeout 300s;
        proxy_send_timeout 900;
        proxy_read_timeout 900;
        proxy_buffer_size 64k;
        proxy_buffers 4 128k;
        proxy_busy_buffers_size 128k;
        proxy_redirect off;
        proxy_hide_header Vary;
        proxy_set_header Accept-Encoding '';
        proxy_set_header Referer $http_referer;
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location ~ /(\.user\.ini|\.ht|\.git|\.svn|\.project|LICENSE|README\.md) {
        deny all;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }
}

